import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Import a CSV file into a Pandas DataFrame
df = pd.read_csv("world-happiness-report-2021.csv")
print(df.head())

df_past = pd.read_csv("world-happiness-report.past.csv")
print(df_past.head())

# Analysing data/ Cleaning data

print(df.info())

print(df.index)

print(df.set_index("Country name"))

print(df.describe())

print(df.dtypes)

# Replace missing values or dropping duplicates
def df_prep(path):
    new_df = pd.read_csv(path)
    new_df.drop_duplicates(inplace=True)
    new_df.fillna("Unknown", inplace=True)
    print(new_df)


# Looping, iterrows
for index, row in df.iterrows():
    print(str(row["Regional indicator"]).split(',')[0])

# Merge DataFrames
inner_merge = pd.merge(left=df, right=df_past, left_on="Country name", right_on="Country name")
print(inner_merge)

# Regional Insights
print(df.columns)
print(df["Regional indicator"].value_counts())

print(df.groupby('Regional indicator')['Ladder score'].mean().reset_index().sort_values('Ladder score'))

Grouped_Metrics = df.groupby('Regional indicator')[['Ladder score', 'Logged GDP per capita', 'Social support', 'Healthy life expectancy',
                                  'Freedom to make life choices', 'Generosity',
                                  'Perceptions of corruption']].mean().reset_index().sort_values('Ladder score')
print(Grouped_Metrics)

# Happiness by Region - Bar plot
sns.set_color_codes("pastel")
sns.barplot(x="Ladder score", y="Regional indicator", hue="Regional indicator", data=Grouped_Metrics, palette="rocket")
plt.title("Happiness by Region")
plt.show()

# Dict Top ranking happiest countries

Top3 = {"Country name":["Finland", "Denmark", "Switzerland"], "Ladder score":[7.842, 7.620, 7.571]}
Top_Ranking = pd.DataFrame(Top3)
print(Top_Ranking)

# Figure 1: Correlation Happiness vs Perceptions of corruption
plt.figure(figsize=(15,20))
sns.scatterplot(x="Perceptions of corruption", y="Ladder score", hue="Regional indicator", data=df
            , alpha=.9, palette='rocket', s=110);
plt.title("Happiness vs Perceptions of Corruption", fontsize="15")
plt.show()

# Figure 2: Correlation Happiness vs Freedom To Make Life Choices
plt.figure(figsize=(15,20))
sns.scatterplot(x="Freedom to make life choices", y="Ladder score", hue="Regional indicator", data=df
            , alpha=.9, palette='rocket', s=110)
plt.title("Happiness vs Freedom To Make Life Choices", fontsize="15")
plt.show()

# Figure 3: Correlation Happiness vs Healthy Life Expectancy
plt.figure(figsize=(15,20))
sns.scatterplot(x="Healthy life expectancy", y="Ladder score", hue="Regional indicator", data=df
            , alpha=.9, palette='rocket', s=110)
plt.title("Happiness vs Healthy Life Expectancy", fontsize="15")
plt.show()

# Figure 4: Correlation Happiness vs Social Support
plt.figure(figsize=(15,20))
sns.scatterplot(x="Social support", y="Ladder score", hue="Regional indicator", data=df
            , alpha=.9, palette='rocket', s=110)
plt.title("Happiness vs Social support", fontsize="15")
plt.show()

# Numpy to get mean/ median - No significant difference
ladder = df["Ladder score"]
np_ladder = np.array(ladder)
ladder_mean = np.mean(np_ladder)
ladder_median = np.median(np_ladder)
print(ladder_mean)
print(ladder_median)



